---
title: "ADP 1.통계적 검정의 근본원리"
author: Ahyeong Jeong
date: "2024-09-02"
categories: [Statistics]
---

# 1. ADP 표본점수
### 2022년에 실시된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를 따른다고 한다.
### (1) ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요. 
```{python}
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm
k = np.linspace(10, 50, 100)
y = norm.pdf(k, loc = 30, scale = 5)
plt.plot(k, y, color = "red")
```

### (2) ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을 때 45점 보다 높은 점수를 받았을 확률을 구하세요.
```{python}
prob = (1 - norm.cdf(45, loc = 30, scale = 5))
print("45점 보다 높은 점수를 받았을 확률 : ", f"{prob:.5f}")
```

### (3) 슽통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.
```{python}
score = norm.ppf(0.9, loc = 30, scale = 5)
print("슬통이의 점수: ", f"{score: .2f}점")
```

### (4) 슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균 내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요. 
```{python}
n = 16
k = np.linspace(10, 50, 100)
y = norm.pdf(k, loc = 30, scale = 5)
sample_y = norm.pdf(k, loc = 30, scale = 5 / np.sqrt(n))
plt.plot(k, y, color = "red")
plt.plot(k, sample_y, color = "blue")
```

### (5) 슬기로운 통계생활 ADP반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게 나올 확률을 구하세요. 
```{python}
n = 16
prob = (1 - norm.cdf(38, loc = 30, scale = 5/np.sqrt(n)))
print("평균이 38점보다 높게 나올 확률: ", f"{prob}")
```


# 2. Covid 19 발병률
## Covid-19 발병률은 `1%`라고 한다. 다음은 이번 코로나 사태로 인하여 코로나 의심 환자들 `1,085`명을 대상으로 슬통 회사의 "다잡아" 키트를 사용하여 양성 반응을 체크한 결과이다

|키트/실제|양성|음성|
|--------|----|---|
|양성|370|10|
|음성|15|690|

### (1) 다잡아 키트가 코로나 바이러스에 걸린 사람을 양성으로 잡아낼 확률을 계산하세요.
```{python}
# P(키트양성) / P(실제양성)
prob = 370 / (370 + 15)
print("확률: ", f"{prob:.2f}")
```

### (2) 슬통회사에서 다잡아 키트를 사용해 양성으로 나온 사람이 실제로는 코로나 바이러스에 걸려 있을 확률을 97%라며, 키트의 우수성을 주장했다. 이 주장이 옳지 않은 이유를 서술하세요.

모집단의 유병률은 0.01이다. 반면 표본의 유병률은 0.01보다 매우 크다. 

### (3) Covid-19 발병률을 사용하여, 키트의 결과값이 양성으로 나온 사람이 실제로 코로나 바이러스에 걸려있을 확률을 구하세요. 
```{python}
# 실제양성: AP
# 키트양성: KP
# 실제음성 : AN
# 키트음성: KP 
# P(AP|KP) = P(AP) * P(KP|AP) / (P(AP) * P(KP|AP) + P(AN) * P(KP| AN))
prob = 0.01 * 370/(370 + 15) / (0.01 * 370/(370 + 10) + 0.99 * 10/(10 + 690))
print("확률: ", f"{prob:.2f}")
```

# 3. 카이제곱분포와 표본 분산
## 자유도가 k인 카이제곱분포를 따르는 확률변수 X를 X ~ x^2(k) 과 같이 나타내고, 이 확률변수의 확률밀도함수는 다음과 같다. 

### (1) 자유도가 4인 카이제곱분포의 확률밀도함수를 그려보아라
```{python}
from scipy.stats import chi2
k = np.linspace(0, 20, 100)
y = chi2.pdf(k, 4)
plt.plot(k, y, color = "red")
```

### (2)  다음의 확률을 구해보세요
### P(3<= X <= 5)
```{python}
prob = chi2.cdf(5, df=4) - chi2.cdf(3, df=4)
print("확률: ", f"{prob:.2f}")
```

### (3) 자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요
```{python}
sample = chi2.rvs(df = 4, size = 1000)
plt.hist(sample, bins=30, density = True, color = "pink", edgecolor = "black")
```

### (4) 자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.
```{python}
value = chi2.ppf(0.95, df = 4)
print("값: ", f"{value:.2f}")
```

### (5) 3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?
```{python}
value = np.percentile(sample, 95)
print("값: ", f"{value:.2f}")
```

### (6) 평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, x1, ..., x20을 뽑은 후 표본분산을 계산한 것을 s1^2이라 생각해보죠. 다음을 수행해보세요.
* 같은 방법으로 500개의 s^2들을 500번 발생시킵니다.
* 발생한 500개의 s^2들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. density = True
* 위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요. 

```{python}
sample = norm.rvs(loc = 3, scale = 2, size = 10000, random_state = 20240902).reshape(500, -1)
s_2 = np.var(sample, axis=1, ddof=1)
plt.hist(s_2 * 4.75, bins = 20, density = True, color= "pink", edgecolor = "black")
x = np.linspace(0, max(s_2*4.75), 1000)
y = chi2.pdf(x, df = 19)
plt.plot(x, y, color= "red")
```