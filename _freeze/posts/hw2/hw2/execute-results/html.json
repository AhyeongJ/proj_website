{
  "hash": "70ef563efe12cef52fcc42e1e5d2ab9c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"EasyPython Practice Ch6\"\nauthor: Ahyeong Jeong\ndate: \"2024-07-17\"\ncategories: [EasyPython]\n---\n\n## p.144\n#### Q1. \n자동차 배기량에 따라 고속도로 연비가 다른지 알아보자\n`displ`이 4이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 `hwy` 평균이 더 높은지 알아보세요\n\n::: {#bdf125e7 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n```\n:::\n\n\n::: {#ab82b2ea .cell execution_count=2}\n``` {.python .cell-code}\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS 빅데이터 스쿨/Doit_Python/Data/mpg.csv\")\ndispl1 = mpg.query('displ <= 4')\ndispl2 = mpg.query('displ >= 5')\ndispl1['hwy'].mean().round(2)\ndispl2['hwy'].mean().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n18.08\n```\n:::\n:::\n\n\n#### Q2. \n자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보자.\n`audi`와 `toyota` 중 어느 `manufacturer`의 `cty` 평균이 더 높은지 알아보세요\n\n::: {#5430b8d2 .cell execution_count=3}\n``` {.python .cell-code}\naudi = mpg.query('manufacturer == \"audi\"')\ntoyota = mpg.query('manufacturer == \"toyota\"')\naudi['cty'].mean().round(2)\ntoyota['cty'].mean().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n18.53\n```\n:::\n:::\n\n\n#### Q3. \n`chevrolet`, `ford`, `honda` 자동차의 고속도로 연비 평균을 알아보자.\n세 회사의 데이터를 추출한 다음 `hwy`전체 평균을 구해보세요.\n\n::: {#d7adc687 .cell execution_count=4}\n``` {.python .cell-code}\ncar3 = mpg.query('manufacturer in [\"chevrolet\", \"ford\", \"honda\"]')\ncar3['hwy'].mean().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n22.51\n```\n:::\n:::\n\n\n## p.150\n#### Q1. \n`mpg` 데이터 중 일부만 추출해 분석에 활용하자. \n`mpg` 데이터에서 `category`, `cty` 변수를 추출해 새로운 데이터를 만들어라. \n새로 만든 데이터의 일부를 추출해 두 변수로만 구성되어 있는지 확인하세요. \n\n::: {#1d8ae37b .cell execution_count=5}\n``` {.python .cell-code}\ndf = mpg[['category','cty']]\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category</th>\n      <th>cty</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>compact</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>compact</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>compact</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>compact</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>compact</td>\n      <td>16</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q2. \n자동차 종류에 따라 도시 연비가 어떻게 다른지 알아보고자 한다. \n앞에서 추출한 데이터를 이용해 `category`가 `suv`인 자동차와 `compact`인 자동차 중 어떤 자동차의 `cty` 평균이 더 높은가. \n\n::: {#7c2e3226 .cell execution_count=6}\n``` {.python .cell-code}\ndf.query('category in [\"suv\", \"compact\"]') \\\n  .groupby('category') \\\n  .agg(cty_mean = (\"cty\", \"mean\")) \n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cty_mean</th>\n    </tr>\n    <tr>\n      <th>category</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>compact</th>\n      <td>20.12766</td>\n    </tr>\n    <tr>\n      <th>suv</th>\n      <td>13.50000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## p.153\n#### Q1. \n`audi`에서 생산한 자동차 중에 어떤 자동차 모델의 `hwy`가 높은지 알아보자\n`audi`에서 생산한 자동차 중 `hwy`가 1~5위에 해당하는 자동차의 데이터를 출력하라\n\n::: {#f5224480 .cell execution_count=7}\n``` {.python .cell-code}\nmpg.query(\"manufacturer == 'audi'\") \\\n    .sort_values('hwy', ascending = False) \\\n    .head(5)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>audi</td>\n      <td>a4 quattro</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>4</td>\n      <td>20</td>\n      <td>28</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## p.158\n#### Q1. \n`mpg` 데이터 복사본을 만들고, `cty`와 `hwy`를 더한 '합산 연비 변수'를 추가하라.\n\n::: {#582769c2 .cell execution_count=8}\n``` {.python .cell-code}\nmpg2 = mpg.copy()\nmpg2 = mpg2.assign(total = mpg2['cty'] + mpg2['hwy'])\nmpg2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n      <th>total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>42</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q2. \n앞에서 만든 '합산 연비 변수'를 2로 나눠 '평균 연비 변수'를 추가하라.\n\n::: {#f9f9f2b1 .cell execution_count=9}\n``` {.python .cell-code}\nmpg2 = mpg2.assign(mean = mpg2['total'] / 2)\nmpg2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n      <th>total</th>\n      <th>mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>47</td>\n      <td>23.5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>50</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>51</td>\n      <td>25.5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>51</td>\n      <td>25.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>42</td>\n      <td>21.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q3.\n'평균 연비 변수'가 가장 높은 자동차 3종의 데이터를 출력하라\n\n::: {#39e0a69d .cell execution_count=10}\n``` {.python .cell-code}\nmpg2.sort_values('mean')['model'].head()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n54       dakota pickup 4wd\n126     grand cherokee 4wd\n69     ram 1500 pickup 4wd\n59             durango 4wd\n65     ram 1500 pickup 4wd\nName: model, dtype: object\n```\n:::\n:::\n\n\n#### Q4. \n1~3번 문제를 해결할 수 있는 하나로 연결된 `pandas` 구문을 만들어 실행해 보자.\n데이터는 복사본 대신 `mpg` 원본을 이용하라. \n\n::: {#e5e0fc9f .cell execution_count=11}\n``` {.python .cell-code}\nmpg.assign(total = mpg[\"cty\"] + mpg[\"cty\"],\n           total_mean = lambda x : x[\"total\"] / 2) \\\n   .sort_values('total_mean', ascending = False) \\\n   .head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n      <th>total</th>\n      <th>total_mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>221</th>\n      <td>volkswagen</td>\n      <td>new beetle</td>\n      <td>1.9</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>35</td>\n      <td>44</td>\n      <td>d</td>\n      <td>subcompact</td>\n      <td>70</td>\n      <td>35.0</td>\n    </tr>\n    <tr>\n      <th>212</th>\n      <td>volkswagen</td>\n      <td>jetta</td>\n      <td>1.9</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>33</td>\n      <td>44</td>\n      <td>d</td>\n      <td>compact</td>\n      <td>66</td>\n      <td>33.0</td>\n    </tr>\n    <tr>\n      <th>222</th>\n      <td>volkswagen</td>\n      <td>new beetle</td>\n      <td>1.9</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l4)</td>\n      <td>f</td>\n      <td>29</td>\n      <td>41</td>\n      <td>d</td>\n      <td>subcompact</td>\n      <td>58</td>\n      <td>29.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## P.166 \n#### Q1. \n`mpg` 데이터의 `category`는 자동차를 특징에 따라 `suv`, `compact` 등 일곱 종류로 분류한 변수\n어떤 차종의 도시 연비가 높은지 비교해 보려고 한다. `category`별 `cty` 평균을 구해 보자. \n\n::: {#2b407dab .cell execution_count=12}\n``` {.python .cell-code}\nmpg.groupby(\"category\", as_index = False) \\\n   .agg(cty_mean = ('cty', 'mean'))\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category</th>\n      <th>cty_mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2seater</td>\n      <td>15.400000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>compact</td>\n      <td>20.127660</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>midsize</td>\n      <td>18.756098</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>minivan</td>\n      <td>15.818182</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>pickup</td>\n      <td>13.000000</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>subcompact</td>\n      <td>20.371429</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>suv</td>\n      <td>13.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q2.\n앞 문제의 출력 결과는 `category` 값 알파벳순으로 정렬되어 있다. \n어떤 차종의 도시 연비가 높은지 쉽게 알아볼 수 있도록 `cty` 평균이 높은 순으로 정렬해 출력하라. \n\n::: {#c79fe208 .cell execution_count=13}\n``` {.python .cell-code}\nmpg.groupby(\"category\", as_index = False) \\\n   .agg(cty_mean = ('cty', 'mean')) \\\n   .sort_values('cty_mean', ascending = False)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category</th>\n      <th>cty_mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>subcompact</td>\n      <td>20.371429</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>compact</td>\n      <td>20.127660</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>midsize</td>\n      <td>18.756098</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>minivan</td>\n      <td>15.818182</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>2seater</td>\n      <td>15.400000</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>suv</td>\n      <td>13.500000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>pickup</td>\n      <td>13.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q3. \n어떤 회사 자동차의 `hwy`가 가장 높은지 알아보려고 한다. \n`hwy` 평균이 가장 높은 회사 세 곳을 출력하세요. \n\n::: {#80903510 .cell execution_count=14}\n``` {.python .cell-code}\nmpg.groupby('manufacturer', as_index = False) \\\n   .agg(mean_hwy = ('hwy', 'mean')) \\\n   .sort_values('mean_hwy', ascending = False)\\\n   .round(2) \\\n   .head(3)[['manufacturer']]\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>4</th>\n      <td>honda</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>volkswagen</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>hyundai</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q4.\n어떤 회사에서 `compact` 차종을 가장 많이 생산하는지 알아보려고 한다. \n회사별 `compact`차종 수를 내림차순으로 정렬해 출력하라. \n\n::: {#2e914650 .cell execution_count=15}\n``` {.python .cell-code}\nmpg.query('category == \"compact\"') \\\n   .groupby('manufacturer', as_index = False) \\\n   .agg(n = ('category', 'count')) \\\n   .sort_values('n', ascending = False)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>volkswagen</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>toyota</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>subaru</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>nissan</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## p.173\n문제 준비\n\n::: {#48efa13a .cell execution_count=16}\n``` {.python .cell-code}\nfuel = pd.DataFrame({'fl'       : ['c', 'd', 'e', 'p', 'r'],\n                     'price_fl' : [2.35, 2.38, 2.11, 2.76, 2.22]})\nfuel\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>fl</th>\n      <th>price_fl</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>c</td>\n      <td>2.35</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>d</td>\n      <td>2.38</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>e</td>\n      <td>2.11</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>p</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>r</td>\n      <td>2.22</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q1. \n`mpg` 데이터에는 연료 종류를 나타낸 `f1` 변수는 있지만 연료 가격을 나타낸 변수는 없다.\n앞에서 만든 `fuel`데이터를 이용해 `mpg` 데이터에 `price_f1` 변수를 추가하라. \n\n::: {#e2c05e3f .cell execution_count=17}\n``` {.python .cell-code}\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS 빅데이터 스쿨/myportfolio/data/mpg.csv\")\nmpg = mpg.merge(fuel, how = \"left\", on = \"fl\")\nmpg.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n      <th>price_fl</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>2.76</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q2. \n연료 가격 변수가 잘 추가됐는지 확인하기 위해 `model`, `fl`, `price_fl` 변수를 추출해 앞부분 5행을 출력하라. \n\n::: {#d558ff2c .cell execution_count=18}\n``` {.python .cell-code}\nmpg[['model', 'fl', 'price_fl']].head()\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>model</th>\n      <th>fl</th>\n      <th>price_fl</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>a4</td>\n      <td>p</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>a4</td>\n      <td>p</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>a4</td>\n      <td>p</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>a4</td>\n      <td>p</td>\n      <td>2.76</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>a4</td>\n      <td>p</td>\n      <td>2.76</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## p.176\n#### 준비하기 \n\n::: {#c8be6433 .cell execution_count=19}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nmidwest = pd.read_csv(\"C:/Users/User/Documents/LS 빅데이터 스쿨/lsbigdata_project1/data/midwest.csv\")\n```\n:::\n\n\n#### Q1\n`popadults`는 해당 지역의 성인 인구, `poptotal`은 전체 인구를 나타냅니다. \n`midwest` 데이터에 '전체 인구 대비 미성년 인구 백분율' 변수를 추가하세요.\n\n::: {#1684be7e .cell execution_count=20}\n``` {.python .cell-code}\nmidwest['nonadult_ratio'] = (midwest['poptotal'] - midwest['popadults']) / midwest['poptotal'] * 100\nmidwest.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PID</th>\n      <th>county</th>\n      <th>state</th>\n      <th>area</th>\n      <th>poptotal</th>\n      <th>popdensity</th>\n      <th>popwhite</th>\n      <th>popblack</th>\n      <th>popamerindian</th>\n      <th>popasian</th>\n      <th>...</th>\n      <th>percprof</th>\n      <th>poppovertyknown</th>\n      <th>percpovertyknown</th>\n      <th>percbelowpoverty</th>\n      <th>percchildbelowpovert</th>\n      <th>percadultpoverty</th>\n      <th>percelderlypoverty</th>\n      <th>inmetro</th>\n      <th>category</th>\n      <th>nonadult_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>561</td>\n      <td>ADAMS</td>\n      <td>IL</td>\n      <td>0.052</td>\n      <td>66090</td>\n      <td>1270.961540</td>\n      <td>63917</td>\n      <td>1702</td>\n      <td>98</td>\n      <td>249</td>\n      <td>...</td>\n      <td>4.355859</td>\n      <td>63628</td>\n      <td>96.274777</td>\n      <td>13.151443</td>\n      <td>18.011717</td>\n      <td>11.009776</td>\n      <td>12.443812</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>34.486307</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>562</td>\n      <td>ALEXANDER</td>\n      <td>IL</td>\n      <td>0.014</td>\n      <td>10626</td>\n      <td>759.000000</td>\n      <td>7054</td>\n      <td>3496</td>\n      <td>19</td>\n      <td>48</td>\n      <td>...</td>\n      <td>2.870315</td>\n      <td>10529</td>\n      <td>99.087145</td>\n      <td>32.244278</td>\n      <td>45.826514</td>\n      <td>27.385647</td>\n      <td>25.228976</td>\n      <td>0</td>\n      <td>LHR</td>\n      <td>36.721250</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>563</td>\n      <td>BOND</td>\n      <td>IL</td>\n      <td>0.022</td>\n      <td>14991</td>\n      <td>681.409091</td>\n      <td>14477</td>\n      <td>429</td>\n      <td>35</td>\n      <td>16</td>\n      <td>...</td>\n      <td>4.488572</td>\n      <td>14235</td>\n      <td>94.956974</td>\n      <td>12.068844</td>\n      <td>14.036061</td>\n      <td>10.852090</td>\n      <td>12.697410</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>35.501301</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>564</td>\n      <td>BOONE</td>\n      <td>IL</td>\n      <td>0.017</td>\n      <td>30806</td>\n      <td>1812.117650</td>\n      <td>29344</td>\n      <td>127</td>\n      <td>46</td>\n      <td>150</td>\n      <td>...</td>\n      <td>4.197800</td>\n      <td>30337</td>\n      <td>98.477569</td>\n      <td>7.209019</td>\n      <td>11.179536</td>\n      <td>5.536013</td>\n      <td>6.217047</td>\n      <td>1</td>\n      <td>ALU</td>\n      <td>37.440758</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>565</td>\n      <td>BROWN</td>\n      <td>IL</td>\n      <td>0.018</td>\n      <td>5836</td>\n      <td>324.222222</td>\n      <td>5264</td>\n      <td>547</td>\n      <td>14</td>\n      <td>5</td>\n      <td>...</td>\n      <td>3.367680</td>\n      <td>4815</td>\n      <td>82.505140</td>\n      <td>13.520249</td>\n      <td>13.022889</td>\n      <td>11.143211</td>\n      <td>19.200000</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>31.819740</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 29 columns</p>\n</div>\n```\n:::\n:::\n\n\n#### Q2. \n미성년 인구 백분율이 가장 높은 상위 5개 `county`의 미성년 인구 백분율을 출력하라. \n\n::: {#deb379b6 .cell execution_count=21}\n``` {.python .cell-code}\nmidwest.sort_values('nonadult_ratio',ascending = False) \\\n       .head() \\\n       [['county', 'nonadult_ratio']]\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>county</th>\n      <th>nonadult_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>230</th>\n      <td>ISABELLA</td>\n      <td>51.501172</td>\n    </tr>\n    <tr>\n      <th>404</th>\n      <td>MENOMINEE</td>\n      <td>50.591260</td>\n    </tr>\n    <tr>\n      <th>281</th>\n      <td>ATHENS</td>\n      <td>49.320727</td>\n    </tr>\n    <tr>\n      <th>247</th>\n      <td>MECOSTA</td>\n      <td>49.059183</td>\n    </tr>\n    <tr>\n      <th>154</th>\n      <td>MONROE</td>\n      <td>47.358182</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q3. \n분류표의 기준에 따라 미성년 비율 등급 변수를 추가하고, 각 등급에 몇 개의 지역이 있는지 알아보자. \n\n::: {#fcd6baa3 .cell execution_count=22}\n``` {.python .cell-code}\nmidwest['grade'] = np.where(midwest['nonadult_ratio'] >= 40, 'large',\n                   np.where(midwest['nonadult_ratio'] >= 30, 'middle', 'small'))\nmidwest.groupby('grade', as_index = False) \\\n       .agg(n = ('grade', 'count'))\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>grade</th>\n      <th>n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>large</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle</td>\n      <td>396</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>small</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q4.\n`popasian`은 해당 지역의 아시아인 인구를 나타냅니다. '전체 인구 대비 아시아인 인구 백분율' 변수를 추가하고 하위 10개의 지역의 `state`, `county`, 아시아인 인구 백분율을 출력하라. \n\n::: {#63e5a024 .cell execution_count=23}\n``` {.python .cell-code}\nmidwest['asian_ratio'] = midwest['popasian'] / midwest['poptotal'] * 100\nmidwest.sort_values('asian_ratio') \\\n       [['state', 'county', 'asian_ratio']] \\\n       .head(10)\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>county</th>\n      <th>asian_ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>404</th>\n      <td>WI</td>\n      <td>MENOMINEE</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>105</th>\n      <td>IN</td>\n      <td>BENTON</td>\n      <td>0.010592</td>\n    </tr>\n    <tr>\n      <th>109</th>\n      <td>IN</td>\n      <td>CARROLL</td>\n      <td>0.015950</td>\n    </tr>\n    <tr>\n      <th>358</th>\n      <td>OH</td>\n      <td>VINTON</td>\n      <td>0.027032</td>\n    </tr>\n    <tr>\n      <th>390</th>\n      <td>WI</td>\n      <td>IRON</td>\n      <td>0.032504</td>\n    </tr>\n    <tr>\n      <th>85</th>\n      <td>IL</td>\n      <td>SCOTT</td>\n      <td>0.053154</td>\n    </tr>\n    <tr>\n      <th>112</th>\n      <td>IN</td>\n      <td>CLAY</td>\n      <td>0.060716</td>\n    </tr>\n    <tr>\n      <th>261</th>\n      <td>MI</td>\n      <td>OSCODA</td>\n      <td>0.063759</td>\n    </tr>\n    <tr>\n      <th>340</th>\n      <td>OH</td>\n      <td>PERRY</td>\n      <td>0.066546</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>IL</td>\n      <td>PIATT</td>\n      <td>0.070749</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "hw2_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}