{
  "hash": "6dbb9ec2c0fead14d12ad247b18dca15",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Convinience Level Practice\"\nauthor: Ahyeong Jeong\ndate: \"2024-07-30\"\ncategories: [Statistics]\n---\n\n# Convinience Level Visualization Practice\n\n__필요한 패키지 불러오기__\n\n::: {#903423d3 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\n```\n:::\n\n\n__데이터 불러오기__\n\n::: {#94a9a7db .cell execution_count=2}\n``` {.python .cell-code}\n# !pip install pyreadstat\nwelfare = pd.read_spss(\"C:/Users/USER/Documents/LS 빅데이터 스쿨/myportfolio/data/Koweps_hpwc14_2019_beta2.sav\")\nwelfare.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>h14_id</th>\n      <th>h14_ind</th>\n      <th>h14_sn</th>\n      <th>h14_merkey</th>\n      <th>h_new</th>\n      <th>h14_cobf</th>\n      <th>p14_wsc</th>\n      <th>p14_wsl</th>\n      <th>p14_wgc</th>\n      <th>p14_wgl</th>\n      <th>...</th>\n      <th>wc14_64</th>\n      <th>wc14_65</th>\n      <th>wc14_5aq4</th>\n      <th>wc14_5aq5</th>\n      <th>wc14_5aq6</th>\n      <th>h14_pers_income1</th>\n      <th>h14_pers_income2</th>\n      <th>h14_pers_income3</th>\n      <th>h14_pers_income4</th>\n      <th>h14_pers_income5</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>20101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.291589</td>\n      <td>0.291589</td>\n      <td>1307.764781</td>\n      <td>1307.764781</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>30101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.419753</td>\n      <td>0.419753</td>\n      <td>1882.570960</td>\n      <td>1882.570960</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>40101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.265263</td>\n      <td>0.265980</td>\n      <td>1189.691668</td>\n      <td>1192.908537</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1284.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>60101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.494906</td>\n      <td>0.495941</td>\n      <td>2219.630833</td>\n      <td>2224.273816</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>.</td>\n      <td>2.0</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>2304.0</td>\n      <td>NaN</td>\n      <td>1800.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>60101.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>1.017935</td>\n      <td>1.017935</td>\n      <td>4565.389177</td>\n      <td>4565.389177</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>.</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 830 columns</p>\n</div>\n```\n:::\n:::\n\n\n__필요한 컬럼들 이름 바꾸기__\n\n::: {#d9915fc4 .cell execution_count=3}\n``` {.python .cell-code}\nwelfare = welfare.rename(\n    columns = {'h14_g3'     : 'sex',           # 성별\n               'h14_g4'     : 'birth',         # 태어난 년도\n               'h14_g10'    : 'marriage_type', # 혼인 상태\n               'h14_g11'    : 'religion',      # 종교\n               'p1402_8aq1' : 'income',        # 월급\n               'h14_eco9'   : 'code_job',      # 직업 코드\n               'h14_reg7'   : 'code_region'})   # 지역 코드 \nwelfare= welfare[['sex', 'birth', 'marriage_type', 'religion', 'income', 'code_job', 'code_region']]\n```\n:::\n\n\n__`sex` 컬럼 검토 및 `male`, `female`로 변경__\n\n::: {#75c95480 .cell execution_count=4}\n``` {.python .cell-code}\n# 원래 성별 변수\nwelfare['sex'].dtypes\nwelfare['sex'].value_counts() \n# welfare['sex'].isna().sum()\n\n# male과 female로 변경\nwelfare['sex'] = np.where(welfare['sex'] == 1, 'male', 'female')\nwelfare['sex'].value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nsex\nfemale    7913\nmale      6505\nName: count, dtype: int64\n```\n:::\n:::\n\n\n__성별에 따른 월급 알아보기__\n\n::: {#5c510007 .cell execution_count=5}\n``` {.python .cell-code}\nsex_income = welfare.dropna(subset = 'income') \\\n                         .groupby('sex', as_index = False) \\\n                         .agg(mean_income = ('income', 'mean'))\nsex_income\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sex</th>\n      <th>mean_income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>female</td>\n      <td>186.293096</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>male</td>\n      <td>349.037571</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n__성별 월급 평균표__\n\n::: {#d7911254 .cell execution_count=6}\n``` {.python .cell-code}\nsns.barplot(data = sex_income, x = 'sex', y = 'mean_income', hue = \"sex\", palette = \"pastel\")\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](hw7_files/figure-html/cell-7-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n__신뢰구간 계산 전 필요한 모수 구하기__\n\n\n0. 성별에 따른 income 데이터프레임 생성\n\n::: {#f50acc2f .cell execution_count=7}\n``` {.python .cell-code}\nf_income = welfare.dropna(subset = \"income\") \\\n                  .query(\"sex == 'female'\")['income']\nm_income = welfare.dropna(subset = 'income') \\\n                  .query(\"sex == 'male'\")['income']\n```\n:::\n\n\n1. 성별 별 평균 \n\n::: {#18a1ac20 .cell execution_count=8}\n``` {.python .cell-code}\nf_bar = np.mean(f_income)\nm_bar = np.mean(m_income)\n```\n:::\n\n\n2. 표본표준편차 사용해서 모표분편차 추정\n\n::: {#de2e3af5 .cell execution_count=9}\n``` {.python .cell-code}\nf_std = np.sqrt(np.var(f_income, ddof=1))\nm_std = np.sqrt(np.var(m_income, ddof=1))\n```\n:::\n\n\n3. 성별 별 표본 개수 구하기\n\n::: {#54c1cf5d .cell execution_count=10}\n``` {.python .cell-code}\nf_n = len(f_income)\nm_n = len(m_income)\n```\n:::\n\n\n4. z\n\n::: {#c416dbe0 .cell execution_count=11}\n``` {.python .cell-code}\nz_0025 = norm.ppf(0.95, loc=0, scale=1)\n```\n:::\n\n\n__성별 별로 신뢰구간 계산하기__\n\n::: {#bd92d3da .cell execution_count=12}\n``` {.python .cell-code}\nf_conf1 = f_bar - z_0025 * f_std/np.sqrt(f_n)\nf_conf2 = f_bar + z_0025 * f_std/np.sqrt(f_n)\nm_conf1 = m_bar - z_0025 * m_std/np.sqrt(m_n)\nm_conf2 = m_bar + z_0025 * m_std/np.sqrt(m_n)\n```\n:::\n\n\n__그래프에 나타내기__\n\n::: {#8aee92f7 .cell execution_count=13}\n``` {.python .cell-code}\nsns.barplot(data = sex_income, x = 'sex', y = 'mean_income', hue = \"sex\", palette = \"pastel\")\nplt.vlines(x = \"female\", ymin = f_conf1, ymax = f_conf2, colors = \"blue\")\nplt.vlines(x = \"male\", ymin = m_conf1, ymax = m_conf2, colors = \"red\")\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](hw7_files/figure-html/cell-14-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\nmale_mean - z_0025 * \n\n",
    "supporting": [
      "hw7_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}